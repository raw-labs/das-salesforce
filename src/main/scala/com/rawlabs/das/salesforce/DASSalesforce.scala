/*
 * Copyright 2024 RAW Labs S.A.
 *
 * Use of this software is governed by the Business Source License
 * included in the file licenses/BSL.txt.
 *
 * As of the Change Date specified in that file, in accordance with
 * the Business Source License, use of this software will be governed
 * by the Apache License, Version 2.0, included in the file
 * licenses/APL.txt.
 */

package com.rawlabs.das.salesforce

import com.rawlabs.das.salesforce.DASSalesforceUtils.{renameToSalesforce, soqlValueToRawValue}
import com.rawlabs.das.sdk._
import com.rawlabs.protocol.das._
import com.rawlabs.protocol.das.services._
import com.rawlabs.protocol.raw.{
  AnyType,
  BinaryType,
  BoolType,
  ByteType,
  DateType,
  DecimalType,
  DoubleType,
  FloatType,
  IntType,
  IntervalType,
  LongType,
  ShortType,
  StringType,
  TimeType,
  TimestampType,
  Type
}
import com.typesafe.scalalogging.StrictLogging

import scala.collection.mutable
import scala.collection.JavaConverters._

class DASSalesforce(options: Map[String, String]) extends DASSdk with StrictLogging {

  private val connector = new DASSalesforceConnector(options)

  private val accountContactRoleTable = new DASSalesforceAccountContactRoleTable(connector)
  private val accountTable = new DASSalesforceAccountTable(connector)
  private val assetTable = new DASSalesforceAsset(connector)
  private val contactTable = new DASSalesforceContactTable(connector)
  private val contractTable = new DASSalesforceContractTable(connector)
  private val leadTable = new DASSalesforceLeadTable(connector)
  private val objectPermissionTable = new DASSalesforceObjectPermissionTable(connector)
  private val opportunityContactRoleTable = new DASSalesforceOpportunityContactRoleTable(connector)
  private val opportunityTable = new DASSalesforceOpportunityTable(connector)
  private val orderTable = new DASSalesforceOrderTable(connector)
  private val permissionSetAssignmentTable = new DASSalesforcePermissionSetAssignmentTable(connector)
  private val permissionSetTable = new DASSalesforcePermissionSetTable(connector)
  private val pricebookTable = new DASSalesforcePricebookTable(connector)
  private val productTable = new DASSalesforceProductTable(connector)
  private val userTable = new DASSalesforceUserTable(connector)
  private val taskTable = new DASSalesforceTaskTable(connector)
  private val opportunityLineItemTable = new DASSalesforceOpportunityLineItemTable(connector)
  private val eventTable = new DASSalesforceEventTable(connector)
  private val calendarTable = new DASSalesforceCalendarTable(connector)
  private val caseTable = new DASSalesforceCaseTable(connector)
  private val contentDocumentTable = new DASSalesforceContentDocumentTable(connector)
  private val contentDocumentLinkTable = new DASSalesforceContentDocumentLinkTable(connector)
  private val contentVersionTable = new DASSalesforceContentVersionTable(connector)
  private val staticTables = Seq(
    accountContactRoleTable,
    accountTable,
    assetTable,
    contactTable,
    contractTable,
    leadTable,
    objectPermissionTable,
    opportunityContactRoleTable,
    opportunityTable,
    orderTable,
    permissionSetAssignmentTable,
    permissionSetTable,
    pricebookTable,
    productTable,
    userTable,
    taskTable,
    opportunityLineItemTable,
    eventTable,
    calendarTable,
    caseTable,
    contentDocumentTable,
    contentDocumentLinkTable,
    contentVersionTable
  )

  private val dynamicTableNames = {
    options.get("dynamic_objects") match {
      case Some(objectNames) =>
        val objs = objectNames.strip()
        if (objs.isEmpty) {
          Seq.empty
        } else {
          objs.split(",").map(_.strip).filter(_.nonEmpty).toSeq
        }
      case None => Seq.empty
    }
  }

  logger.debug(s"Dynamic tables: $dynamicTableNames")

  private val dynamicTables = dynamicTableNames.map(name => new DASSalesforceDynamicTable(connector, name))

  private val allTables = staticTables ++ dynamicTables

  override val operationsSupported: OperationsSupportedResponse = {
    OperationsSupportedResponse
      .newBuilder()
      .setJoinSupported(true)
      .setOrderBySupported(true)
      .setAggregationSupported(true)
      ////////////////////////////
      // sum(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("sum")
          .addParameters(Type.newBuilder().setByte(ByteType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("sum")
          .addParameters(Type.newBuilder().setShort(ShortType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("sum")
          .addParameters(Type.newBuilder().setInt(IntType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("sum")
          .addParameters(Type.newBuilder().setLong(LongType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("sum")
          .addParameters(Type.newBuilder().setFloat(FloatType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("sum")
          .addParameters(
            Type.newBuilder().setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("sum")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // avg(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("avg")
          .addParameters(Type.newBuilder().setByte(ByteType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("avg")
          .addParameters(Type.newBuilder().setShort(ShortType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("avg")
          .addParameters(Type.newBuilder().setInt(IntType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("avg")
          .addParameters(Type.newBuilder().setLong(LongType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("avg")
          .addParameters(Type.newBuilder().setFloat(FloatType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("avg")
          .addParameters(
            Type.newBuilder().setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("avg")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // stddev(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("stddev")
          .addParameters(Type.newBuilder().setByte(ByteType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("stddev")
          .addParameters(Type.newBuilder().setShort(ShortType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("stddev")
          .addParameters(Type.newBuilder().setInt(IntType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("stddev")
          .addParameters(Type.newBuilder().setLong(LongType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("stddev")
          .addParameters(Type.newBuilder().setFloat(FloatType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("stddev")
          .addParameters(
            Type.newBuilder().setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("stddev")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // min(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(Type.newBuilder().setByte(ByteType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(Type.newBuilder().setShort(ShortType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(Type.newBuilder().setInt(IntType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(Type.newBuilder().setLong(LongType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(Type.newBuilder().setFloat(FloatType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(
            Type.newBuilder().setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(
            Type.newBuilder().setString(StringType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(Type.newBuilder().setDate(DateType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(Type.newBuilder().setTime(TimeType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("min")
          .addParameters(
            Type.newBuilder().setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // max(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(Type.newBuilder().setByte(ByteType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(Type.newBuilder().setShort(ShortType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(Type.newBuilder().setInt(IntType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(Type.newBuilder().setLong(LongType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(Type.newBuilder().setFloat(FloatType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(
            Type.newBuilder().setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(
            Type.newBuilder().setString(StringType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(Type.newBuilder().setDate(DateType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(Type.newBuilder().setTime(TimeType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("max")
          .addParameters(
            Type.newBuilder().setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // count(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("count")
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("count")
          .addParameters(Type.newBuilder().setAny(AnyType.newBuilder()).build())
          .build()
      )
      ////////////////////////////
      // length(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("length")
          .addParameters(
            Type.newBuilder().setString(StringType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("length")
          .addParameters(
            Type.newBuilder().setBinary(BinaryType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // upper(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("upper")
          .addParameters(
            Type.newBuilder().setString(StringType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // lower(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("lower")
          .addParameters(
            Type.newBuilder().setString(StringType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // floor(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("floor")
          .addParameters(
            Type.newBuilder().setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("floor")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // sqrt(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("sqrt")
          .addParameters(
            Type.newBuilder().setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("sqrt")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // exp(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("exp")
          .addParameters(
            Type.newBuilder().setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("exp")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // mod(...)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("mod")
          .addParameters(Type.newBuilder().setByte(ByteType.newBuilder().setTriable(false).setNullable(true)).build())
          .addParameters(Type.newBuilder().setByte(ByteType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("mod")
          .addParameters(Type.newBuilder().setShort(ShortType.newBuilder().setTriable(false).setNullable(true)).build())
          .addParameters(Type.newBuilder().setShort(ShortType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("mod")
          .addParameters(Type.newBuilder().setInt(IntType.newBuilder().setTriable(false).setNullable(true)).build())
          .addParameters(Type.newBuilder().setInt(IntType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("mod")
          .addParameters(Type.newBuilder().setLong(LongType.newBuilder().setTriable(false).setNullable(true)).build())
          .addParameters(Type.newBuilder().setLong(LongType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("mod")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // int4(...) (aka cast)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("int4")
          .addParameters(Type.newBuilder().setByte(ByteType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("int4")
          .addParameters(Type.newBuilder().setShort(ShortType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("int4")
          .addParameters(Type.newBuilder().setLong(LongType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("int4")
          .addParameters(Type.newBuilder().setFloat(FloatType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("int4")
          .addParameters(
            Type.newBuilder().setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("int4")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("int4")
          .addParameters(Type.newBuilder().setBool(BoolType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      ////////////////////////////
      // float8(...) (aka cast)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("float8")
          .addParameters(Type.newBuilder().setByte(ByteType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("float8")
          .addParameters(Type.newBuilder().setShort(ShortType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("float8")
          .addParameters(Type.newBuilder().setInt(IntType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("float8")
          .addParameters(Type.newBuilder().setLong(LongType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("float8")
          .addParameters(Type.newBuilder().setFloat(FloatType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("float8")
          .addParameters(
            Type.newBuilder().setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // numeric(...) (aka cast)
      ////////////////////////////
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("numeric")
          .addParameters(Type.newBuilder().setByte(ByteType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("numeric")
          .addParameters(Type.newBuilder().setShort(ShortType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("numeric")
          .addParameters(Type.newBuilder().setInt(IntType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("numeric")
          .addParameters(Type.newBuilder().setLong(LongType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("numeric")
          .addParameters(Type.newBuilder().setFloat(FloatType.newBuilder().setTriable(false).setNullable(true)).build())
          .build()
      )
      .addFunctionsSupported(
        FunctionSupported
          .newBuilder()
          .setName("numeric")
          .addParameters(
            Type.newBuilder().setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true)).build()
          )
          .build()
      )
      ////////////////////////////
      // = operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // > operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // < operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN).build())
          .setLhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // <= operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LESS_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // >= operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.GREATER_THAN_OR_EQUAL).build())
          .setLhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // <> operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setBool(BoolType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_EQUALS).build())
          .setLhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInterval(IntervalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // + operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.PLUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.PLUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.PLUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.PLUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.PLUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.PLUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.PLUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // - operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MINUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MINUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MINUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MINUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MINUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MINUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MINUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MINUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDate(DateType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MINUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTime(TimeType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MINUS).build())
          .setLhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setTimestamp(TimestampType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // * operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.TIMES).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.TIMES).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.TIMES).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.TIMES).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.TIMES).build())
          .setLhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.TIMES).build())
          .setLhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.TIMES).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // / operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.DIV).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.DIV).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.DIV).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.DIV).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.DIV).build())
          .setLhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setFloat(FloatType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.DIV).build())
          .setLhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDouble(DoubleType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.DIV).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // % operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MOD).build())
          .setLhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setByte(ByteType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MOD).build())
          .setLhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setShort(ShortType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MOD).build())
          .setLhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setInt(IntType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MOD).build())
          .setLhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setLong(LongType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.MOD).build())
          .setLhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setDecimal(DecimalType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      ////////////////////////////
      // ~~ operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.LIKE).build())
          .setLhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      ) ////////////////////////////
      // !~~ operator
      ////////////////////////////
      .addOperatorsSupported(
        OperatorSupported
          .newBuilder()
          .setOperator(Operator.newBuilder().setType(OperatorType.NOT_LIKE).build())
          .setLhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .setRhs(
            Type
              .newBuilder()
              .setString(StringType.newBuilder().setTriable(false).setNullable(true))
              .build()
          )
          .build()
      )
      .build()
  }

  override def tableDefinitions: Seq[TableDefinition] = allTables.map(_.tableDefinition)

  override def functionDefinitions: Seq[FunctionDefinition] = Seq.empty

  override def getTable(name: String): Option[DASTable] = allTables.find(_.tableName == name)

  override def getFunction(name: String): Option[DASFunction] = None

  override def estimateQuery(sql: String): (Int, Int) = {
    (1, 1)
  }

  override def executeQuery(sql: String): DASExecuteResult = {
    DASSQLParser.parseSQL(sql) match {
      case Right(query) =>
        val columns = query.select.items.map {
          case DASSelectColumn(column) => column.name.replace("\"", "")
          case _ => throw new DASSdkException("Only column names are supported in SELECT clause")
        }
        val salesforceColumns = columns.map(c => renameToSalesforce(c.replace("\"", "")))

        val soql = SOQLGenerator.generateSOQL(query)

        logger.debug(s"Executing SOQL query: $soql")
        var soqlQuery = connector.forceApi.query(soql)

        new DASExecuteResult {
          private val currentChunk: mutable.Buffer[Row] = mutable.Buffer.empty
          private var currentChunkIndex: Int = 0

          readChunk()

          private def readChunk(): Unit = {
            currentChunk.clear()
            currentChunkIndex = 0
            soqlQuery.getRecords.asScala.foreach { record =>
              val row = Row.newBuilder()
              salesforceColumns.zipWithIndex.foreach {
                case (salesforceColumn, idx) =>
                  val salesforceValue = record.get(salesforceColumn)
                  row.addColumns(
                    Column
                      .newBuilder()
                      .setName(columns(idx))
                      .setData(soqlValueToRawValue(salesforceValue))
                      .build()
                  )
              }
              currentChunk += row.build()
            }

            if (!soqlQuery.isDone) {
              soqlQuery = connector.forceApi.queryMore(soqlQuery.getNextRecordsUrl)
            }
          }

          override def close(): Unit = {}

          override def hasNext: Boolean = {
            currentChunkIndex < currentChunk.size || !soqlQuery.isDone
          }

          override def next(): Row = {
            if (!hasNext) throw new NoSuchElementException("No more elements")

            if (currentChunkIndex == currentChunk.size) {
              readChunk()
            }

            val row = currentChunk(currentChunkIndex)
            currentChunkIndex += 1
            row
          }
        }

      case Left(error) => throw new DASSdkException(s"Failed to parse SQL: $error")
    }
  }

}
